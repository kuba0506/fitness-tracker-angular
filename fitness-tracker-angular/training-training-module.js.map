{"version":3,"sources":["webpack:///./src/app/training/current-training/current-training.component.html","webpack:///./src/app/training/current-training/current-training.component.less","webpack:///./src/app/training/current-training/current-training.component.ts","webpack:///./src/app/training/current-training/stop-training.component.ts","webpack:///./src/app/training/new-training/new-training.component.html","webpack:///./src/app/training/new-training/new-training.component.less","webpack:///./src/app/training/new-training/new-training.component.ts","webpack:///./src/app/training/past-training/past-training.component.html","webpack:///./src/app/training/past-training/past-training.component.less","webpack:///./src/app/training/past-training/past-training.component.ts","webpack:///./src/app/training/training-routing.module.ts","webpack:///./src/app/training/training.component.html","webpack:///./src/app/training/training.component.less","webpack:///./src/app/training/training.component.ts","webpack:///./src/app/training/training.module.ts"],"names":[],"mappings":"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","file":"training-training-module.js","sourcesContent":["module.exports = \"<section class=\\\"current-training\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n  <mat-progress-spinner mode=\\\"determinate\\\" [value]=\\\"progress\\\"></mat-progress-spinner>\\n  <h1>{{progress}}%</h1>\\n  <p>Keep on going, you can do it!</p>\\n  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"stopExercise()\\\">Stop</button>\\n</section>\\n\"","module.exports = \".current-training {\\n  padding: 30px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdHJhaW5pbmcvY3VycmVudC10cmFpbmluZy9EOi9wcm9qZWN0cy9Bbmd1bGFyL2ZpdG5lc3MtdHJhY2tlci1hbmd1bGFyL3NyYy9hcHAvdHJhaW5pbmcvY3VycmVudC10cmFpbmluZy9jdXJyZW50LXRyYWluaW5nLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC90cmFpbmluZy9jdXJyZW50LXRyYWluaW5nL2N1cnJlbnQtdHJhaW5pbmcuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC90cmFpbmluZy9jdXJyZW50LXRyYWluaW5nL2N1cnJlbnQtdHJhaW5pbmcuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY3VycmVudC10cmFpbmluZyB7XG4gICAgcGFkZGluZzogMzBweDtcbn0iLCIuY3VycmVudC10cmFpbmluZyB7XG4gIHBhZGRpbmc6IDMwcHg7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { StopTrainingComponent } from './stop-training.component';\nimport { TrainingService } from '../training.service';\nimport { IExercise } from '../exercise.model';\nimport { Store } from '@ngrx/store';\nimport { State, getRunningExercise } from '../training.reducer';\n\nimport { take } from 'rxjs/operators'; // rxjs 6+\n\n@Component({\n  selector: 'app-current-training',\n  templateUrl: './current-training.component.html',\n  styleUrls: ['./current-training.component.less']\n})\nexport class CurrentTrainingComponent implements OnInit {\n  progress = 0;\n  interval;\n\n  constructor(\n    private dialog: MatDialog,\n    private store: Store<State>,\n    private trainingService: TrainingService) { }\n\n  ngOnInit() {\n    this.startOrResumeExercise();\n  }\n\n  stopExercise() {\n    // stop counting\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n\n    // open dialog\n    const dialog = this.dialog.open(StopTrainingComponent, {\n      data: {\n        progress: this.progress\n      }\n    });\n\n    // decide upon user selction to resume or stop\n    dialog.afterClosed().subscribe(result => {\n      if (result === true) {\n        this.trainingService.cancelExercise(this.progress);\n      } else {\n        this.startOrResumeExercise();\n      }\n    });\n  }\n\n  startOrResumeExercise() {\n    this.store.select(getRunningExercise).pipe(take(1)).subscribe(ex => {\n      const step = this.trainingService.getRunningExercise().duration / 100 * 1000;\n\n      this.interval = setInterval(() => {\n        this.progress = this.progress + 1;\n\n        if (this.progress >= 100) {\n          this.trainingService.completeExercise();\n          clearInterval(this.interval);\n        }\n      }, step);\n\n    });\n  }\n\n}\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n    selector: 'app-stop-training',\r\n    template: `<h1 mat-dialog-title>Are you sure?</h1>\r\n                <p>You already got {{passedData.progress}}%</p>\r\n                <mat-dialog-actions>\r\n                    <button mat-button [mat-dialog-close]=\"true\">Yes</button>\r\n                    <button mat-button [mat-dialog-close]=\"false\">No</button>\r\n                </mat-dialog-actions>`\r\n})\r\n\r\nexport class StopTrainingComponent {\r\n    constructor(@Inject(MAT_DIALOG_DATA) public passedData: any) { }\r\n}\r\n","module.exports = \"<section fxLayout fxLayoutAlign=\\\"center\\\" class=\\\"new-training\\\"> \\n  <form (ngSubmit)=\\\"startExercise(form)\\\" #form=\\\"ngForm\\\"> \\n    <mat-card fxflex.xs=\\\"100%\\\" fxFlex=\\\"400px\\\">\\n      <mat-card-title fxLayoutAlign=\\\"center\\\">Time to start a workout</mat-card-title>\\n      <mat-card-content *ngIf=\\\"!(isPending$ | async) && (exercises$ | async)\\\" fxLayoutAlign=\\\"center\\\">\\n        <mat-form-field>\\n          <mat-select placeholder=\\\"Select type of training\\\" ngModel name=\\\"exercise\\\" required>\\n            <mat-option *ngFor=\\\"let exercise of (exercises$ | async)\\\" [value]=\\\"exercise.id\\\">\\n              {{exercise.name}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </mat-card-content>\\n      <mat-card-actions fxLayoutAlign=\\\"center\\\">\\n        <button *ngIf=\\\"!(isPending$ | async)  && (exercises$ | async)\\\" type=\\\"submit\\\" mat-button [disabled]=\\\"form.invalid\\\">Start</button>\\n        <button *ngIf=\\\"!(isPending$ | async) && !(exercises$ | async)\\\" type=\\\"button\\\" (ngClick)=\\\"getAllExercises()\\\" mat-button>Try again</button>\\n        <mat-spinner *ngIf=\\\"isPending$ | async\\\"></mat-spinner>\\n      </mat-card-actions>\\n    </mat-card>\\n  </form>\\n</section>\"","module.exports = \".new-training {\\n  padding: 30px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdHJhaW5pbmcvbmV3LXRyYWluaW5nL0Q6L3Byb2plY3RzL0FuZ3VsYXIvZml0bmVzcy10cmFja2VyLWFuZ3VsYXIvc3JjL2FwcC90cmFpbmluZy9uZXctdHJhaW5pbmcvbmV3LXRyYWluaW5nLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC90cmFpbmluZy9uZXctdHJhaW5pbmcvbmV3LXRyYWluaW5nLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvdHJhaW5pbmcvbmV3LXRyYWluaW5nL25ldy10cmFpbmluZy5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uZXctdHJhaW5pbmcge1xuICAgIHBhZGRpbmc6IDMwcHg7XG59IiwiLm5ldy10cmFpbmluZyB7XG4gIHBhZGRpbmc6IDMwcHg7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { TrainingService } from '../training.service';\nimport { IExercise } from '../exercise.model';\nimport { NgForm } from '@angular/forms';\nimport { Subscription, Observable } from 'rxjs';\n// import { map } from 'rxjs/operators'; // rxjs 6+\nimport 'rxjs/add/operator/map';\nimport { Store } from '@ngrx/store';\nimport { IState, getisPending } from 'src/app/app.reducer';\nimport { State, getAvailableExercises } from '../training.reducer';\n\n@Component({\n  selector: 'app-new-training',\n  templateUrl: './new-training.component.html',\n  styleUrls: ['./new-training.component.less']\n})\nexport class NewTrainingComponent implements OnInit {\n  exercises$: Observable<IExercise[]>;\n  // exercises: IExercise[] = [];\n  isPending$: Observable<boolean>;\n  subscriptionContainer: Subscription[] = [];\n\n  constructor(\n    private trainingService: TrainingService,\n    private store: Store<State>) { }\n\n  ngOnInit() {\n    this.isPending$ = this.store.select(getisPending);\n    this.exercises$ = this.store.select(getAvailableExercises);\n    this.getAllExercises();\n    // this.subscriptionContainer.push(\n    //   this.trainingService.exercisesChanged\n    //     .subscribe(exercises => (this.exercises = exercises))\n    // );\n  }\n\n  // ngOnDestroy() {\n  //   if (this.subscriptionContainer.length > 0) {\n  //     this.subscriptionContainer.forEach(sub => sub.unsubscribe());\n  //   }\n  // }\n\n  startExercise(form: NgForm) {\n    this.trainingService.startExercise(form.value.exercise);\n  }\n\n  getAllExercises() {\n    this.trainingService.getAll();\n  }\n}\n","module.exports = \"<div fxLayoutAlign=\\\"center center\\\">\\n    <mat-form-field fxFlex=\\\"40%\\\">\\n        <input matInput type=\\\"text\\\" (keyup)=\\\"doFilter($event.target.value)\\\" placeholder=\\\"filter\\\">\\n    </mat-form-field>\\n</div>\\n\\n<mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n    <ng-container matColumnDef=\\\"date\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\">{{element.date.toDate() | date}}</mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"name\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\">{{element.name}}</mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"calories\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Calories</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\">{{element.calories | number}}</mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"duration\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Duration</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\">{{element.duration | number}}</mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"state\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>State</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\">{{element.state}}</mat-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n</mat-table>\\n\\n<mat-paginator [pageSizeOptions]=\\\"[1, 5, 10]\\\" [pageSize]=\\\"10\\\"></mat-paginator>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYWluaW5nL3Bhc3QtdHJhaW5pbmcvcGFzdC10cmFpbmluZy5jb21wb25lbnQubGVzcyJ9 */\"","import { Component, OnInit, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\nimport { IExercise } from '../exercise.model';\nimport { TrainingService } from '../training.service';\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { Subscription } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { State, getPastExercises } from '../training.reducer';\n\n@Component({\n  selector: 'app-past-training',\n  templateUrl: './past-training.component.html',\n  styleUrls: ['./past-training.component.less']\n})\n\nexport class PastTrainingComponent implements OnInit, AfterViewInit {\n  displayedColumns: string[] = ['date', 'name', 'calories', 'duration', 'state'];\n  dataSource = new MatTableDataSource<IExercise>();\n  private pastExerciseSubscription: Subscription;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) pagination: MatPaginator;\n\n  constructor(\n    private trainingService: TrainingService,\n    private store: Store<State>) { }\n\n  ngOnInit() {\n    this.trainingService.getPastExercises();\n    this.store.select(getPastExercises).subscribe((exercises: IExercise[]) => {\n      this.dataSource.data = exercises;\n    });\n  }\n\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.pagination;\n  }\n\n  doFilter(query: string) {\n    this.dataSource.filter = query.trim().toLowerCase();\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TrainingComponent } from './training.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: TrainingComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class TrainingRoutingModule { }\r\n","module.exports = \"<mat-tab-group *ngIf=\\\"!(ongoingTraining$ | async)\\\">\\n  <mat-tab label=\\\"New Exercise\\\">\\n    <app-new-training></app-new-training>\\n  </mat-tab>\\n  <mat-tab label=\\\"Past Exercises\\\">\\n    <app-past-training></app-past-training>\\n  </mat-tab>\\n</mat-tab-group>\\n\\n<app-current-training *ngIf=\\\"(ongoingTraining$ | async)\\\"></app-current-training>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYWluaW5nL3RyYWluaW5nLmNvbXBvbmVudC5sZXNzIn0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { TrainingService } from './training.service';\nimport { State, getIsTraining } from './training.reducer';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-training',\n  templateUrl: './training.component.html',\n  styleUrls: ['./training.component.less']\n})\nexport class TrainingComponent implements OnInit {\n  exerciseSubscription: Subscription;\n\n  ongoingTraining$: Observable<boolean>;\n  // ongoingTraining = false;\n\n  constructor(\n    private trainingService: TrainingService,\n    private store: Store<State>) { }\n\n  ngOnInit() {\n    this.ongoingTraining$ = this.store.select(getIsTraining);\n    // this.exerciseSubscription = this.trainingService.exerciseChanged.subscribe(exercise => {\n    //   if (exercise) {\n    //     this.ongoingTraining = true;\n    //   } else {\n    //     this.ongoingTraining = false;\n    //   }\n    // });\n  }\n\n  // ngOnDestroy(): void {\n  //   if (this.exerciseSubscription) {\n  //     this.exerciseSubscription.unsubscribe();\n  //   }\n  // }\n\n}\n","import { NgModule } from '@angular/core';\nimport { TrainingComponent } from './training.component';\nimport { CurrentTrainingComponent } from './current-training/current-training.component';\nimport { NewTrainingComponent } from './new-training/new-training.component';\nimport { PastTrainingComponent } from './past-training/past-training.component';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { StopTrainingComponent } from './current-training/stop-training.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { TrainingRoutingModule } from './training-routing.module';\n\nimport { StoreModule } from '@ngrx/store';\nimport { trainingReducer } from './training.reducer';\n\n@NgModule({\n  declarations: [\n    TrainingComponent,\n    CurrentTrainingComponent,\n    NewTrainingComponent,\n    PastTrainingComponent,\n    StopTrainingComponent\n  ],\n  imports: [\n    AngularFirestoreModule,\n    SharedModule,\n    TrainingRoutingModule,\n    StoreModule.forFeature('training', trainingReducer) // like in appReducer\n  ],\n  entryComponents: [StopTrainingComponent]\n})\nexport class TrainingModule { }\n"],"sourceRoot":""}